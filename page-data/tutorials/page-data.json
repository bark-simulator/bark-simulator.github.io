{"componentChunkName":"component---src-templates-tutorials-js","path":"/tutorials/","result":{"data":{"markdownRemark":{"html":"<p>Before you start using BARK, you'll need to familiarize yourself with and install some core technologies. <br /><br />\n<b>Prerequisites</b> before you start developing:</p>\n<ul class=\"list-disc list-inside\">\n<li><a href=\"https://bazel.build/\" class=\"text-blue-600\">Bazel.build</a>: Build tool used in BARK:</li>\n<li><a href=\"https://www.python.org/downloads/\" class=\"text-blue-600\">Python3.7-dev</a> and the package <code class=\"language-text\">python3.7-tk</code>.</li>\n<li>Virtual Python environment: <code class=\"language-text\">pip install virtualenv==16.7.8</code></li>\n<li><a href=\"https://gcc.gnu.org/gcc-7/\" class=\"text-blue-600\">GCC7</a>: C++ compiler for BARK</li>\n<li>We recommend using <a href=\"https://code.visualstudio.com/\" class=\"text-blue-600\">Visual Studio Code</a> for development</li>\n</ul>\n<h2 class=\"text-3xl text-gray-800 mt-10\">Installing BARK</h2>\n<p>In this section, we explain how to clone BARK to running the first example in BARK.\n<br />\n<br />\nTo get BARK running, follow these steps:</p>\n<ol class=\"list-decimal list-inside\">\n<li>Clone the BARK repository and enter the folder: <code class=\"language-text\">git clone https://github.com/bark-simulator/bark.git &amp;&amp; cd bark</code>.</li>\n<li>Create a virtual Python environment and install all packages by running <code class=\"language-text\">bash install.sh</code>.</li>\n<li>After the virtual Python environment has been created, activate it using <code class=\"language-text\">source dev_into.sh</code>.</li>\n<li>To make sure BARK is working run all tests using <code class=\"language-text\">bazel test //...</code> (make sure the virtual Python environment is activated).</li>\n<li>Now, you are ready to go! Try out one of the provided examples, e.g. the merging example: <code class=\"language-text\">bazel run //examples:merging</code>.</li>\n</ol>\n<h2 class=\"text-3xl text-gray-800 mt-10\">Installing Python on macOS</h2>\n<p>On macOS, we recommend the following Python setup:</p>\n<ol class=\"list-decimal list-inside\">\n<li>BARK requires the latest version of tcl-tk (<code class=\"language-text\">brew upgrade tcl-tk</code>).</li>\n<li>To isolate the Python version from the macOS system we recommend using pyenv: <code class=\"language-text\">brew install pyenv</code>.</li>\n<li>Intall Python3.7-dev by running: <code class=\"language-text\">pyenv install 3.7-dev</code>. If you run into trouble with TKInter have a look <a href=\"https://stackoverflow.com/questions/60469202/unable-to-install-tkinter-with-pyenv-pythons-on-macos\" class=\"text-blue-600\">here</a>.</li>\n<li>Set this as your global Python version: <code class=\"language-text\">pyenv global 3.7-dev</code>.</li>\n<li>Add pyenv initialization to your shell, e.g. <code class=\"language-text\">~/.zshrc</code> and add <code class=\"language-text\">eval &quot;$(pyenv init -)&quot;</code>.</li>\n<li>Install the virtual environment package: <code class=\"language-text\">pip install virtualenv==16.7.8</code></li>\n<li>If you run into trouble with the Matplotlib TKAgg backend have a look <a href=\"https://stackoverflow.com/questions/21784641/installation-issue-with-matplotlib-python\" class=\"text-blue-600\">here</a>.</li>\n</ol>\n<h2 class=\"text-3xl text-gray-800 mt-10\">Frequently Asked Questions (FAQs)</h2>\n<h3 class=\"text-2xl text-gray-800 mt-2\">Python.h not found</h3>\n<p>Make sure that there is a 'Python.h' file in the <code class=\"language-text\">python/venv</code> folder.</p>","frontmatter":{"title":"Getting Started"}}},"pageContext":{"slug":"/tutorials/"}}}