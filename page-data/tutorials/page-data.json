{"componentChunkName":"component---src-templates-tutorials-js","path":"/tutorials/","result":{"data":{"markdownRemark":{"html":"<p>BARK can simply be installed using <code class=\"language-text\">pip install bark-simulator</code>.\nTo build BARK from source, have a look <a href=\"/tutorials/building_from_source/\" class=\"aggBlueText\">here</a>.\nThe output of this first tutorial should be the merging scenario shown below with the ego vehicle being depicted in blue.</p>\n<div align=\"center\">\n<p><img src=\"/b359ebff1d22ee62b1370f2ef4b9d6a0/merging.gif\" alt=\"BARK Simulator\"></p>\n</div>\n<p>First, several Python and C++ BARK modules have to be imported.\nThe <code class=\"language-text\">ParameterServer</code> in BARK manages all parameters and their default values.\nBARK offers several visualization options with the Matplotlib viewer (<code class=\"language-text\">MPViewer</code>) primed for scientific publications.\nThe <code class=\"language-text\">ScenarioGeneration</code> module specifies the initial placement, states, behavior models, goals and more of the scenario.\nThe <code class=\"language-text\">Runtime</code> is used to step the BARK simulator for a pre-defined number of steps.</p>\n<p>All modules having a path prefix of <code class=\"language-text\">bark.core.*</code> are C++ modules that are wrapped for Python.\nFor the example, some OpenDrive, goal definitions, and behavior models have to be imported.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># BARK Python imports</span>\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>parameters <span class=\"token keyword\">import</span> ParameterServer\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>viewer<span class=\"token punctuation\">.</span>matplotlib_viewer <span class=\"token keyword\">import</span> MPViewer\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>scenario<span class=\"token punctuation\">.</span>scenario_generation<span class=\"token punctuation\">.</span>config_with_ease <span class=\"token keyword\">import</span> \\\n  LaneCorridorConfig<span class=\"token punctuation\">,</span> ConfigWithEase\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>runtime <span class=\"token keyword\">import</span> Runtime\n\n<span class=\"token comment\"># BARK c++ imports</span>\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>opendrive <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>goal_definition <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span>behavior <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></code></pre></div>\n<br />\n<p>The <code class=\"language-text\">ParameterServer</code> in BARK handles all default and passed parameters as shown here:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># parameters can also be set using JSON files</span>\n<span class=\"token comment\"># param_server = ParameterServer(filename=\"config.json\")</span>\nparam_server <span class=\"token operator\">=</span> ParameterServer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># this sets a default value</span>\nparam_server<span class=\"token punctuation\">[</span><span class=\"token string\">\"BehaviorIDMClassic\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DesiredVelocity\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Default velocity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># overwrites the default value</span>\nparam_server<span class=\"token punctuation\">[</span><span class=\"token string\">\"BehaviorIDMClassic\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DesiredVelocity\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br />\n<p>The scenario can be easily set up using the <code class=\"language-text\">ConfigWithEase</code> scenario generation which enables configuring lanes individually.\nFor the merging scenario, the left and right lane are configured using a <code class=\"language-text\">LaneCorridorConfig</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomLaneCorridorConfig</span><span class=\"token punctuation\">(</span>LaneCorridorConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>\n               params<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n               <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>CustomLaneCorridorConfig<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">goal</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> world<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    road_corr <span class=\"token operator\">=</span> world<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">.</span>GetRoadCorridor<span class=\"token punctuation\">(</span>\n      self<span class=\"token punctuation\">.</span>_road_ids<span class=\"token punctuation\">,</span> XodrDrivingDirection<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">)</span>\n    lane_corr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_road_corridor<span class=\"token punctuation\">.</span>lane_corridors<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># defines goal polygon on the left lane</span>\n    <span class=\"token keyword\">return</span> GoalDefinitionPolygon<span class=\"token punctuation\">(</span>lane_corr<span class=\"token punctuation\">.</span>polygon<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># configure both lanes</span>\nleft_lane <span class=\"token operator\">=</span> CustomLaneCorridorConfig<span class=\"token punctuation\">(</span>params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n                                     lane_corridor_id<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                                     road_ids<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                     behavior_model<span class=\"token operator\">=</span>BehaviorMobilRuleBased<span class=\"token punctuation\">(</span>param_server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                     s_min<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\n                                     s_max<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># this lane has controlled_ids; ego vehicle is placed on this lane</span>\nright_lane <span class=\"token operator\">=</span> CustomLaneCorridorConfig<span class=\"token punctuation\">(</span>params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n                                      lane_corridor_id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                                      road_ids<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                      controlled_ids<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n                                      behavior_model<span class=\"token operator\">=</span>BehaviorMobilRuleBased<span class=\"token punctuation\">(</span>param_server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                      s_min<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\n                                      s_max<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># finally, generate 3 scenarios on the merging map</span>\nscenarios <span class=\"token operator\">=</span> \\\n  ConfigWithEase<span class=\"token punctuation\">(</span>\n    num_scenarios<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    map_file_name<span class=\"token operator\">=</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"../runtime/tests/data/DR_DEU_Merging_MT_v01_shifted.xodr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    random_seed<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n    lane_corridor_configs<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>left_lane<span class=\"token punctuation\">,</span> right_lane<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<p>To visualize the scenario, a viewer has to be passed to the BARK runtime.\nHere, the <code class=\"language-text\">MPViewer</code> for scientific plots is used.</p>\n<p>The <code class=\"language-text\">Runtime</code> additionally requires the scenario generator to be passed, the simulation step-time, and whether the scenarios should be rendered.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">viewer <span class=\"token operator\">=</span> MPViewer<span class=\"token punctuation\">(</span>params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n                  x_range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  y_range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  follow_agent_id<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nenv <span class=\"token operator\">=</span> Runtime<span class=\"token punctuation\">(</span>step_time<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\n              viewer<span class=\"token operator\">=</span>viewer<span class=\"token punctuation\">,</span>\n              scenario_generator<span class=\"token operator\">=</span>scenarios<span class=\"token punctuation\">,</span>\n              render<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br />\n<p>Now everything is set up and the BARK <code class=\"language-text\">Runtime</code> can be stepped.\nIn the code below, each of the three scenarios is stepped and visualized for 90 steps.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># run 3 scenarios</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  env<span class=\"token punctuation\">.</span>reset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># step scenario 90 time-steps</span>\n  <span class=\"token keyword\">for</span> step <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    env<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br />\nThe video below provides a deeper understanding of and motivation for BARK:\n<br />\n<br />\n<div align=\"center\">\n<p>\n        <div class=\"embedVideo-container\">\n            <iframe\n              title=\"\"\n              width=\"800\"\n              height=\"400\"\n              src=\"https://www.youtube-nocookie.com/embed/pJuvZkHkdu0?rel=0\"\n              class=\"embedVideo-iframe\"\n              style=\"border:0\"\n              \n              loading=\"lazy\"\n              allowfullscreen\n\t      sandbox=\"allow-same-origin allow-scripts allow-popups\"\n            ></iframe>\n        </div></p>\n</div>\n<br />","frontmatter":{"title":"Getting Started With BARK"}}},"pageContext":{"slug":"/tutorials/"}},"staticQueryHashes":["1503014085","3885506533","4018511916","63159454"]}