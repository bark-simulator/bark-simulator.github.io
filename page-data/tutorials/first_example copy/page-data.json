{"componentChunkName":"component---src-templates-tutorials-js","path":"/tutorials/first_example copy/","result":{"data":{"markdownRemark":{"html":"<p class=\"para\">In this example, we show the basic functionality of BARK using a merging scenario.\nIt can be ran using: <code class=\"language-text\">bazel run //examples:merging</code>.</p>\n<p class=\"para\"><img src=\"/b359ebff1d22ee62b1370f2ef4b9d6a0/merging.gif\" alt=\"BARK Simulator\" class=\"mt-2 mb-2\"></p>\n<p class=\"para\">BARK uses a <code class=\"language-text\">ParameterServer()</code> that stores all parameters of the simulation.\nWe can set parameters globally:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">param_server<span class=\"token punctuation\">[</span><span class=\"token string\">\"BehaviorIDMClassic\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DesiredVelocity\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p class=\"para\">We define the scenario using a scenario generation module of BARK.\nIn the following example, both lanes of the merging scenario are defined with a controlled agent on the right lane.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># configure both lanes</span>\nleft_lane <span class=\"token operator\">=</span> CustomLaneCorridorConfig<span class=\"token punctuation\">(</span>params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n                                     lane_corridor_id<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                                     road_ids<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                     behavior_model<span class=\"token operator\">=</span>BehaviorMobilRuleBased<span class=\"token punctuation\">(</span>param_server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                     s_min<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\n                                     s_max<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\nright_lane <span class=\"token operator\">=</span> CustomLaneCorridorConfig<span class=\"token punctuation\">(</span>params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n                                      lane_corridor_id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                                      road_ids<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                      controlled_ids<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n                                      behavior_model<span class=\"token operator\">=</span>BehaviorMobilRuleBased<span class=\"token punctuation\">(</span>param_server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                      s_min<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\n                                      s_max<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n\nscenarios <span class=\"token operator\">=</span> \\\n  ConfigWithEase<span class=\"token punctuation\">(</span>num_scenarios<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                 map_file_name<span class=\"token operator\">=</span><span class=\"token string\">\"modules/runtime/tests/data/DR_DEU_Merging_MT_v01_shifted.xodr\"</span><span class=\"token punctuation\">,</span>\n                 random_seed<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                 params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n                 lane_corridor_configs<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>left_lane<span class=\"token punctuation\">,</span> right_lane<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p class=\"para\">We then define the viewer and runtime in order to run and visualize the scenarios:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">viewer <span class=\"token operator\">=</span> MPViewer<span class=\"token punctuation\">(</span>params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n                  x_range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  y_range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  follow_agent_id<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nenv <span class=\"token operator\">=</span> Runtime<span class=\"token punctuation\">(</span>step_time<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\n              viewer<span class=\"token operator\">=</span>viewer<span class=\"token punctuation\">,</span>\n              scenario_generator<span class=\"token operator\">=</span>scenarios<span class=\"token punctuation\">,</span>\n              render<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p class=\"para\">Running scenarios can now be easily done as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># run 3 scenarios</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  env<span class=\"token punctuation\">.</span>reset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> step <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    env<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>sim_step_time<span class=\"token operator\">/</span>sim_real_time_factor<span class=\"token punctuation\">)</span></code></pre></div>\n<p class=\"para\">However, BARK also provides a <code class=\"language-text\">BenchmarkRunner</code> that runs scenarios automatically and benchmarks the performance of behavior models.</p>\n<h2 class=\"text-3xl text-gray-800 mt-8 mb-1\">Other Examples</h2>\n<p class=\"para\">The other examples can be run in a similar fashion using:</p>\n<ul class=\"list-disc list-inside\">\n<li><code class=\"language-text\">bazel run //examples:highway</code>: Two-lane highway example.</li>\n<li><code class=\"language-text\">bazel run //examples:intersection</code>: Three way intersection.</li>\n<li><code class=\"language-text\">bazel run //examples:interaction_dataset</code>: Dataset replay.</li>\n<li><code class=\"language-text\">bazel run //examples:benchmark_database</code>: Benchmarks behaviors using a scenario database.</li>\n</ul>","frontmatter":{"title":"First Example"}}},"pageContext":{"slug":"/tutorials/first_example copy/"}}}