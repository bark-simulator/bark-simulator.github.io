{"componentChunkName":"component---src-templates-tutorials-js","path":"/tutorials/first_example/","result":{"data":{"markdownRemark":{"html":"<p>Before diving deeper into the <a href=\"/tutorials/building_blocks/\" class=\"text-blue-600\">building blocks</a> of BARK, let us first run a simple example.\n<br />\nAn example provided in BARK can be run, e.g. the merging scenario using <code class=\"language-text\">bazel run //bark/examples:merging</code>:</p>\n<div align=\"center\">\n<p><img src=\"/b359ebff1d22ee62b1370f2ef4b9d6a0/merging.gif\" alt=\"BARK Simulator\"></p>\n</div>\nThe ego vehicle is displayed in blue and the other vehicles in gray.\nThe ego vehicle's goal is depicted on the left lane by the blue polygonal area.\nEach vehicle in BARK has a unique ID displayed as a number on the vehicle.\nNow, that we know how to run an example, let us go into some details.\n<br /><br />\n<p>First, we need to import all required modules:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>parameters <span class=\"token keyword\">import</span> ParameterServer\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>viewer<span class=\"token punctuation\">.</span>matplotlib_viewer <span class=\"token keyword\">import</span> MPViewer\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>viewer<span class=\"token punctuation\">.</span>video_renderer <span class=\"token keyword\">import</span> VideoRenderer\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>scenario<span class=\"token punctuation\">.</span>scenario_generation<span class=\"token punctuation\">.</span>config_with_ease <span class=\"token keyword\">import</span> \\\n  LaneCorridorConfig<span class=\"token punctuation\">,</span> ConfigWithEase\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>runtime <span class=\"token keyword\">import</span> Runtime\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>viewer<span class=\"token punctuation\">.</span>panda3d_easy <span class=\"token keyword\">import</span> Panda3dViewer\n<span class=\"token comment\"># bark c++ imports</span>\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>opendrive <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>goal_definition <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> bark<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span>behavior <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></code></pre></div>\n<p>This includes the <code class=\"language-text\">ParameterServer</code> storing all parameters, the <code class=\"language-text\">MPViewer</code> viewer for rendering, the <code class=\"language-text\">ConfigWithEase</code> scenario generation and the <code class=\"language-text\">Runtime</code>.\nAdditionally, we also import the BARK goal definitions, OpenDrive map helpers and the behaviors.\n<br />\n<br /></p>\n<p>Parameters can easily be set as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">param_server <span class=\"token operator\">=</span> ParameterServer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparam_server<span class=\"token punctuation\">[</span><span class=\"token string\">\"BehaviorIDMClassic\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DesiredVelocity\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>Next, after importing the modules and setting the basic parameters, we want to specify the scenario the ego vehicle drives in.\nIn the merging example, we place vehicles on both lanes with the ego (controlled) vehicle starting on the right lane.<br/>\nTo configure the left and right lane of the merging scenario, we can use the following code:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># scenario</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomLaneCorridorConfig</span><span class=\"token punctuation\">(</span>LaneCorridorConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>\n               params<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n               <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>CustomLaneCorridorConfig<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">def</span> <span class=\"token function\">goal</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> world<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    road_corr <span class=\"token operator\">=</span> world<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">.</span>GetRoadCorridor<span class=\"token punctuation\">(</span>\n      self<span class=\"token punctuation\">.</span>_road_ids<span class=\"token punctuation\">,</span> XodrDrivingDirection<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">)</span>\n    lane_corr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_road_corridor<span class=\"token punctuation\">.</span>lane_corridors<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># defines goal polygon on the left lane</span>\n    <span class=\"token keyword\">return</span> GoalDefinitionPolygon<span class=\"token punctuation\">(</span>lane_corr<span class=\"token punctuation\">.</span>polygon<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># configure both lanes</span>\nleft_lane <span class=\"token operator\">=</span> CustomLaneCorridorConfig<span class=\"token punctuation\">(</span>params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n                                     lane_corridor_id<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                                     road_ids<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                     behavior_model<span class=\"token operator\">=</span>BehaviorMobilRuleBased<span class=\"token punctuation\">(</span>param_server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                     s_min<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\n                                     s_max<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\nright_lane <span class=\"token operator\">=</span> CustomLaneCorridorConfig<span class=\"token punctuation\">(</span>params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n                                      lane_corridor_id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                                      road_ids<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                                      controlled_ids<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n                                      behavior_model<span class=\"token operator\">=</span>BehaviorMobilRuleBased<span class=\"token punctuation\">(</span>param_server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                      s_min<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\n                                      s_max<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n\nscenarios <span class=\"token operator\">=</span> \\\n  ConfigWithEase<span class=\"token punctuation\">(</span>\n    num_scenarios<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    map_file_name<span class=\"token operator\">=</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"../runtime/tests/data/DR_DEU_Merging_MT_v01_shifted.xodr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    random_seed<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n    lane_corridor_configs<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>left_lane<span class=\"token punctuation\">,</span> right_lane<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>In this case, the <code class=\"language-text\">ConfigWithEase</code> scenario generation produces three (<code class=\"language-text\">num_scenarios=3</code>) scenarios.\n<br/>\n<br/></p>\n<p>At this point we are almost ready to run the scenarios.\nNow, we only need to specify the viewer and the runtime:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">viewer <span class=\"token operator\">=</span> MPViewer<span class=\"token punctuation\">(</span>params<span class=\"token operator\">=</span>param_server<span class=\"token punctuation\">,</span>\n                  x_range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  y_range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  follow_agent_id<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nenv <span class=\"token operator\">=</span> Runtime<span class=\"token punctuation\">(</span>step_time<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\n              viewer<span class=\"token operator\">=</span>viewer<span class=\"token punctuation\">,</span>\n              scenario_generator<span class=\"token operator\">=</span>scenarios<span class=\"token punctuation\">,</span>\n              render<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nsim_step_time <span class=\"token operator\">=</span> param_server<span class=\"token punctuation\">[</span><span class=\"token string\">\"simulation\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"step_time\"</span><span class=\"token punctuation\">,</span>\n                                           <span class=\"token string\">\"Step-time used in simulation\"</span><span class=\"token punctuation\">,</span>\n                                           <span class=\"token number\">0.2</span><span class=\"token punctuation\">]</span>\nsim_real_time_factor <span class=\"token operator\">=</span> param_server<span class=\"token punctuation\">[</span><span class=\"token string\">\"simulation\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"real_time_factor\"</span><span class=\"token punctuation\">,</span>\n                                                  <span class=\"token string\">\"execution in real-time or faster\"</span><span class=\"token punctuation\">,</span>\n                                                  <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>The scenarios in BARK can be run as simple as:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># run 3 scenarios</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  env<span class=\"token punctuation\">.</span>reset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># step scenario 90 time-steps</span>\n  <span class=\"token keyword\">for</span> step <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    env<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>sim_step_time<span class=\"token operator\">/</span>sim_real_time_factor<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 class=\"text-3xl text-gray-800 mt-10\">Other Examples</h2>\n<p>The other examples can be run in a similar fashion using:</p>\n<ul class=\"list-disc list-inside\">\n<li><code class=\"language-text\">bazel run //bark/examples:highway</code>: Two-lane highway example</li>\n<li><code class=\"language-text\">bazel run //bark/examples:intersection</code>: Three way intersection</li>\n<li><code class=\"language-text\">bazel run //bark/examples:interaction_dataset</code>: Dataset replay</li>\n<li><code class=\"language-text\">bazel run //bark/examples:benchmark_database</code>: Benchmarks behaviors using a scenario database</li>\n</ul>","frontmatter":{"title":"First Example"}}},"pageContext":{"slug":"/tutorials/first_example/"}}}